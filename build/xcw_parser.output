Terminals unused in grammar

   ADD
   SUB
   MUL
   DIV
   MOD
   EQ
   NEQ
   LE
   LEQ
   GE
   GEQ
   NOT
   AND
   OR
   IF
   GOTO
   LABEL
   PARAM
   CALL
   RETURN
   COLON


Grammar

    0 $accept: Program $end

    1 Program: ProgramUnit
    2        | Program ProgramUnit

    3 ProgramUnit: Declaration
    4            | Initialization
    5            | FunctionDef

    6 Declaration: VAR IDENT
    7            | VAR NUM IDENT

    8 Initialization: IDENT ASSIGN NUM
    9               | IDENT LBRAC NUM RBRAC ASSIGN NUM

   10 FunctionDef: FunctionHeader Statements FunctionEnd

   11 FunctionHeader: FUNC LBRAC NUM RBRAC

   12 FunctionEnd: END FUNC

   13 Statements: Statement
   14           | Statements Statement

   15 Statement: Declaration
   16          | Expression

   17 Expression: IDENT ASSIGN NUM


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258)
SUB (259)
MUL (260)
DIV (261)
MOD (262)
ASSIGN (263) 8 9 17
EQ (264)
NEQ (265)
LE (266)
LEQ (267)
GE (268)
GEQ (269)
NOT (270)
AND (271)
OR (272)
NUM (273) 7 8 9 11 17
IDENT (274) 6 7 8 9 17
LBRAC (275) 9 11
RBRAC (276) 9 11
IF (277)
GOTO (278)
LABEL (279)
PARAM (280)
CALL (281)
RETURN (282)
COLON (283)
VAR (284) 6 7
FUNC (285) 11 12
END (286) 12


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
Program (33)
    on left: 1 2, on right: 0 2
ProgramUnit (34)
    on left: 3 4 5, on right: 1 2
Declaration (35)
    on left: 6 7, on right: 3 15
Initialization (36)
    on left: 8 9, on right: 4
FunctionDef (37)
    on left: 10, on right: 5
FunctionHeader (38)
    on left: 11, on right: 10
FunctionEnd (39)
    on left: 12, on right: 10
Statements (40)
    on left: 13 14, on right: 10 14
Statement (41)
    on left: 15 16, on right: 13 14
Expression (42)
    on left: 17, on right: 16


State 0

    0 $accept: . Program $end

    IDENT  shift, and go to state 1
    VAR    shift, and go to state 2
    FUNC   shift, and go to state 3

    Program         go to state 4
    ProgramUnit     go to state 5
    Declaration     go to state 6
    Initialization  go to state 7
    FunctionDef     go to state 8
    FunctionHeader  go to state 9


State 1

    8 Initialization: IDENT . ASSIGN NUM
    9               | IDENT . LBRAC NUM RBRAC ASSIGN NUM

    ASSIGN  shift, and go to state 10
    LBRAC   shift, and go to state 11


State 2

    6 Declaration: VAR . IDENT
    7            | VAR . NUM IDENT

    NUM    shift, and go to state 12
    IDENT  shift, and go to state 13


State 3

   11 FunctionHeader: FUNC . LBRAC NUM RBRAC

    LBRAC  shift, and go to state 14


State 4

    0 $accept: Program . $end
    2 Program: Program . ProgramUnit

    $end   shift, and go to state 15
    IDENT  shift, and go to state 1
    VAR    shift, and go to state 2
    FUNC   shift, and go to state 3

    ProgramUnit     go to state 16
    Declaration     go to state 6
    Initialization  go to state 7
    FunctionDef     go to state 8
    FunctionHeader  go to state 9


State 5

    1 Program: ProgramUnit .

    $default  reduce using rule 1 (Program)


State 6

    3 ProgramUnit: Declaration .

    $default  reduce using rule 3 (ProgramUnit)


State 7

    4 ProgramUnit: Initialization .

    $default  reduce using rule 4 (ProgramUnit)


State 8

    5 ProgramUnit: FunctionDef .

    $default  reduce using rule 5 (ProgramUnit)


State 9

   10 FunctionDef: FunctionHeader . Statements FunctionEnd

    IDENT  shift, and go to state 17
    VAR    shift, and go to state 2

    Declaration  go to state 18
    Statements   go to state 19
    Statement    go to state 20
    Expression   go to state 21


State 10

    8 Initialization: IDENT ASSIGN . NUM

    NUM  shift, and go to state 22


State 11

    9 Initialization: IDENT LBRAC . NUM RBRAC ASSIGN NUM

    NUM  shift, and go to state 23


State 12

    7 Declaration: VAR NUM . IDENT

    IDENT  shift, and go to state 24


State 13

    6 Declaration: VAR IDENT .

    $default  reduce using rule 6 (Declaration)


State 14

   11 FunctionHeader: FUNC LBRAC . NUM RBRAC

    NUM  shift, and go to state 25


State 15

    0 $accept: Program $end .

    $default  accept


State 16

    2 Program: Program ProgramUnit .

    $default  reduce using rule 2 (Program)


State 17

   17 Expression: IDENT . ASSIGN NUM

    ASSIGN  shift, and go to state 26


State 18

   15 Statement: Declaration .

    $default  reduce using rule 15 (Statement)


State 19

   10 FunctionDef: FunctionHeader Statements . FunctionEnd
   14 Statements: Statements . Statement

    IDENT  shift, and go to state 17
    VAR    shift, and go to state 2
    END    shift, and go to state 27

    Declaration  go to state 18
    FunctionEnd  go to state 28
    Statement    go to state 29
    Expression   go to state 21


State 20

   13 Statements: Statement .

    $default  reduce using rule 13 (Statements)


State 21

   16 Statement: Expression .

    $default  reduce using rule 16 (Statement)


State 22

    8 Initialization: IDENT ASSIGN NUM .

    $default  reduce using rule 8 (Initialization)


State 23

    9 Initialization: IDENT LBRAC NUM . RBRAC ASSIGN NUM

    RBRAC  shift, and go to state 30


State 24

    7 Declaration: VAR NUM IDENT .

    $default  reduce using rule 7 (Declaration)


State 25

   11 FunctionHeader: FUNC LBRAC NUM . RBRAC

    RBRAC  shift, and go to state 31


State 26

   17 Expression: IDENT ASSIGN . NUM

    NUM  shift, and go to state 32


State 27

   12 FunctionEnd: END . FUNC

    FUNC  shift, and go to state 33


State 28

   10 FunctionDef: FunctionHeader Statements FunctionEnd .

    $default  reduce using rule 10 (FunctionDef)


State 29

   14 Statements: Statements Statement .

    $default  reduce using rule 14 (Statements)


State 30

    9 Initialization: IDENT LBRAC NUM RBRAC . ASSIGN NUM

    ASSIGN  shift, and go to state 34


State 31

   11 FunctionHeader: FUNC LBRAC NUM RBRAC .

    $default  reduce using rule 11 (FunctionHeader)


State 32

   17 Expression: IDENT ASSIGN NUM .

    $default  reduce using rule 17 (Expression)


State 33

   12 FunctionEnd: END FUNC .

    $default  reduce using rule 12 (FunctionEnd)


State 34

    9 Initialization: IDENT LBRAC NUM RBRAC ASSIGN . NUM

    NUM  shift, and go to state 35


State 35

    9 Initialization: IDENT LBRAC NUM RBRAC ASSIGN NUM .

    $default  reduce using rule 9 (Initialization)
