Terminals unused in grammar

   MOD
   AND
   OR


State 23 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: ProgramUnit
    2        | Program ProgramUnit

    3 ProgramUnit: Declaration
    4            | Initialization
    5            | FunctionDef

    6 Declaration: VAR IDENT
    7            | VAR NUM IDENT

    8 Initialization: IDENT ASSIGN NUM
    9               | IDENT LBRAC NUM RBRAC ASSIGN NUM

   10 FunctionDef: FunctionHeader Statements FunctionEnd

   11 FunctionHeader: FUNC LBRAC NUM RBRAC

   12 FunctionEnd: END FUNC

   13 Statements: Statement
   14           | Statements Statement

   15 Statement: Declaration
   16          | Expression

   17 Expression: IDENT ASSIGN RightValue
   18           | IDENT ASSIGN OP RightValue
   19           | IDENT ASSIGN RightValue BinOp RightValue
   20           | IDENT LBRAC RightValue RBRAC ASSIGN RightValue
   21           | IDENT ASSIGN IDENT LBRAC RightValue RBRAC
   22           | IF RightValue LOGICOP RightValue GOTO LABEL
   23           | GOTO LABEL
   24           | LABEL COLON
   25           | PARAM RightValue
   26           | CALL FUNC
   27           | RETURN
   28           | RETURN RightValue
   29           | IDENT ASSIGN CALL FUNC

   30 BinOp: OP
   31      | LOGICOP

   32 OP: NOT
   33   | ADD
   34   | SUB
   35   | MUL
   36   | DIV

   37 LOGICOP: LE
   38        | LEQ
   39        | GE
   40        | GEQ
   41        | EQ
   42        | NEQ

   43 RightValue: IDENT
   44           | NUM


Terminals, with rules where they appear

$end (0) 0
error (256)
ADD (258) 33
SUB (259) 34
MUL (260) 35
DIV (261) 36
MOD (262)
ASSIGN (263) 8 9 17 18 19 20 21 29
EQ (264) 41
NEQ (265) 42
LE (266) 37
LEQ (267) 38
GE (268) 39
GEQ (269) 40
NOT (270) 32
AND (271)
OR (272)
NUM (273) 7 8 9 11 44
IDENT (274) 6 7 8 9 17 18 19 20 21 29 43
LBRAC (275) 9 11 20 21
RBRAC (276) 9 11 20 21
IF (277) 22
GOTO (278) 22 23
LABEL (279) 22 23 24
PARAM (280) 25
CALL (281) 26 29
RETURN (282) 27 28
COLON (283) 24
VAR (284) 6 7
FUNC (285) 11 12 26 29
END (286) 12


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
Program (33)
    on left: 1 2, on right: 0 2
ProgramUnit (34)
    on left: 3 4 5, on right: 1 2
Declaration (35)
    on left: 6 7, on right: 3 15
Initialization (36)
    on left: 8 9, on right: 4
FunctionDef (37)
    on left: 10, on right: 5
FunctionHeader (38)
    on left: 11, on right: 10
FunctionEnd (39)
    on left: 12, on right: 10
Statements (40)
    on left: 13 14, on right: 10 14
Statement (41)
    on left: 15 16, on right: 13 14
Expression (42)
    on left: 17 18 19 20 21 22 23 24 25 26 27 28 29, on right: 16
BinOp (43)
    on left: 30 31, on right: 19
OP (44)
    on left: 32 33 34 35 36, on right: 18 30
LOGICOP (45)
    on left: 37 38 39 40 41 42, on right: 22 31
RightValue (46)
    on left: 43 44, on right: 17 18 19 20 21 22 25 28


State 0

    0 $accept: . Program $end

    IDENT  shift, and go to state 1
    VAR    shift, and go to state 2
    FUNC   shift, and go to state 3

    Program         go to state 4
    ProgramUnit     go to state 5
    Declaration     go to state 6
    Initialization  go to state 7
    FunctionDef     go to state 8
    FunctionHeader  go to state 9


State 1

    8 Initialization: IDENT . ASSIGN NUM
    9               | IDENT . LBRAC NUM RBRAC ASSIGN NUM

    ASSIGN  shift, and go to state 10
    LBRAC   shift, and go to state 11


State 2

    6 Declaration: VAR . IDENT
    7            | VAR . NUM IDENT

    NUM    shift, and go to state 12
    IDENT  shift, and go to state 13


State 3

   11 FunctionHeader: FUNC . LBRAC NUM RBRAC

    LBRAC  shift, and go to state 14


State 4

    0 $accept: Program . $end
    2 Program: Program . ProgramUnit

    $end   shift, and go to state 15
    IDENT  shift, and go to state 1
    VAR    shift, and go to state 2
    FUNC   shift, and go to state 3

    ProgramUnit     go to state 16
    Declaration     go to state 6
    Initialization  go to state 7
    FunctionDef     go to state 8
    FunctionHeader  go to state 9


State 5

    1 Program: ProgramUnit .

    $default  reduce using rule 1 (Program)


State 6

    3 ProgramUnit: Declaration .

    $default  reduce using rule 3 (ProgramUnit)


State 7

    4 ProgramUnit: Initialization .

    $default  reduce using rule 4 (ProgramUnit)


State 8

    5 ProgramUnit: FunctionDef .

    $default  reduce using rule 5 (ProgramUnit)


State 9

   10 FunctionDef: FunctionHeader . Statements FunctionEnd

    IDENT   shift, and go to state 17
    IF      shift, and go to state 18
    GOTO    shift, and go to state 19
    LABEL   shift, and go to state 20
    PARAM   shift, and go to state 21
    CALL    shift, and go to state 22
    RETURN  shift, and go to state 23
    VAR     shift, and go to state 2

    Declaration  go to state 24
    Statements   go to state 25
    Statement    go to state 26
    Expression   go to state 27


State 10

    8 Initialization: IDENT ASSIGN . NUM

    NUM  shift, and go to state 28


State 11

    9 Initialization: IDENT LBRAC . NUM RBRAC ASSIGN NUM

    NUM  shift, and go to state 29


State 12

    7 Declaration: VAR NUM . IDENT

    IDENT  shift, and go to state 30


State 13

    6 Declaration: VAR IDENT .

    $default  reduce using rule 6 (Declaration)


State 14

   11 FunctionHeader: FUNC LBRAC . NUM RBRAC

    NUM  shift, and go to state 31


State 15

    0 $accept: Program $end .

    $default  accept


State 16

    2 Program: Program ProgramUnit .

    $default  reduce using rule 2 (Program)


State 17

   17 Expression: IDENT . ASSIGN RightValue
   18           | IDENT . ASSIGN OP RightValue
   19           | IDENT . ASSIGN RightValue BinOp RightValue
   20           | IDENT . LBRAC RightValue RBRAC ASSIGN RightValue
   21           | IDENT . ASSIGN IDENT LBRAC RightValue RBRAC
   29           | IDENT . ASSIGN CALL FUNC

    ASSIGN  shift, and go to state 32
    LBRAC   shift, and go to state 33


State 18

   22 Expression: IF . RightValue LOGICOP RightValue GOTO LABEL

    NUM    shift, and go to state 34
    IDENT  shift, and go to state 35

    RightValue  go to state 36


State 19

   23 Expression: GOTO . LABEL

    LABEL  shift, and go to state 37


State 20

   24 Expression: LABEL . COLON

    COLON  shift, and go to state 38


State 21

   25 Expression: PARAM . RightValue

    NUM    shift, and go to state 34
    IDENT  shift, and go to state 35

    RightValue  go to state 39


State 22

   26 Expression: CALL . FUNC

    FUNC  shift, and go to state 40


State 23

   27 Expression: RETURN .
   28           | RETURN . RightValue

    NUM    shift, and go to state 34
    IDENT  shift, and go to state 35

    IDENT     [reduce using rule 27 (Expression)]
    $default  reduce using rule 27 (Expression)

    RightValue  go to state 41


State 24

   15 Statement: Declaration .

    $default  reduce using rule 15 (Statement)


State 25

   10 FunctionDef: FunctionHeader Statements . FunctionEnd
   14 Statements: Statements . Statement

    IDENT   shift, and go to state 17
    IF      shift, and go to state 18
    GOTO    shift, and go to state 19
    LABEL   shift, and go to state 20
    PARAM   shift, and go to state 21
    CALL    shift, and go to state 22
    RETURN  shift, and go to state 23
    VAR     shift, and go to state 2
    END     shift, and go to state 42

    Declaration  go to state 24
    FunctionEnd  go to state 43
    Statement    go to state 44
    Expression   go to state 27


State 26

   13 Statements: Statement .

    $default  reduce using rule 13 (Statements)


State 27

   16 Statement: Expression .

    $default  reduce using rule 16 (Statement)


State 28

    8 Initialization: IDENT ASSIGN NUM .

    $default  reduce using rule 8 (Initialization)


State 29

    9 Initialization: IDENT LBRAC NUM . RBRAC ASSIGN NUM

    RBRAC  shift, and go to state 45


State 30

    7 Declaration: VAR NUM IDENT .

    $default  reduce using rule 7 (Declaration)


State 31

   11 FunctionHeader: FUNC LBRAC NUM . RBRAC

    RBRAC  shift, and go to state 46


State 32

   17 Expression: IDENT ASSIGN . RightValue
   18           | IDENT ASSIGN . OP RightValue
   19           | IDENT ASSIGN . RightValue BinOp RightValue
   21           | IDENT ASSIGN . IDENT LBRAC RightValue RBRAC
   29           | IDENT ASSIGN . CALL FUNC

    ADD    shift, and go to state 47
    SUB    shift, and go to state 48
    MUL    shift, and go to state 49
    DIV    shift, and go to state 50
    NOT    shift, and go to state 51
    NUM    shift, and go to state 34
    IDENT  shift, and go to state 52
    CALL   shift, and go to state 53

    OP          go to state 54
    RightValue  go to state 55


State 33

   20 Expression: IDENT LBRAC . RightValue RBRAC ASSIGN RightValue

    NUM    shift, and go to state 34
    IDENT  shift, and go to state 35

    RightValue  go to state 56


State 34

   44 RightValue: NUM .

    $default  reduce using rule 44 (RightValue)


State 35

   43 RightValue: IDENT .

    $default  reduce using rule 43 (RightValue)


State 36

   22 Expression: IF RightValue . LOGICOP RightValue GOTO LABEL

    EQ   shift, and go to state 57
    NEQ  shift, and go to state 58
    LE   shift, and go to state 59
    LEQ  shift, and go to state 60
    GE   shift, and go to state 61
    GEQ  shift, and go to state 62

    LOGICOP  go to state 63


State 37

   23 Expression: GOTO LABEL .

    $default  reduce using rule 23 (Expression)


State 38

   24 Expression: LABEL COLON .

    $default  reduce using rule 24 (Expression)


State 39

   25 Expression: PARAM RightValue .

    $default  reduce using rule 25 (Expression)


State 40

   26 Expression: CALL FUNC .

    $default  reduce using rule 26 (Expression)


State 41

   28 Expression: RETURN RightValue .

    $default  reduce using rule 28 (Expression)


State 42

   12 FunctionEnd: END . FUNC

    FUNC  shift, and go to state 64


State 43

   10 FunctionDef: FunctionHeader Statements FunctionEnd .

    $default  reduce using rule 10 (FunctionDef)


State 44

   14 Statements: Statements Statement .

    $default  reduce using rule 14 (Statements)


State 45

    9 Initialization: IDENT LBRAC NUM RBRAC . ASSIGN NUM

    ASSIGN  shift, and go to state 65


State 46

   11 FunctionHeader: FUNC LBRAC NUM RBRAC .

    $default  reduce using rule 11 (FunctionHeader)


State 47

   33 OP: ADD .

    $default  reduce using rule 33 (OP)


State 48

   34 OP: SUB .

    $default  reduce using rule 34 (OP)


State 49

   35 OP: MUL .

    $default  reduce using rule 35 (OP)


State 50

   36 OP: DIV .

    $default  reduce using rule 36 (OP)


State 51

   32 OP: NOT .

    $default  reduce using rule 32 (OP)


State 52

   21 Expression: IDENT ASSIGN IDENT . LBRAC RightValue RBRAC
   43 RightValue: IDENT .

    LBRAC  shift, and go to state 66

    $default  reduce using rule 43 (RightValue)


State 53

   29 Expression: IDENT ASSIGN CALL . FUNC

    FUNC  shift, and go to state 67


State 54

   18 Expression: IDENT ASSIGN OP . RightValue

    NUM    shift, and go to state 34
    IDENT  shift, and go to state 35

    RightValue  go to state 68


State 55

   17 Expression: IDENT ASSIGN RightValue .
   19           | IDENT ASSIGN RightValue . BinOp RightValue

    ADD  shift, and go to state 47
    SUB  shift, and go to state 48
    MUL  shift, and go to state 49
    DIV  shift, and go to state 50
    EQ   shift, and go to state 57
    NEQ  shift, and go to state 58
    LE   shift, and go to state 59
    LEQ  shift, and go to state 60
    GE   shift, and go to state 61
    GEQ  shift, and go to state 62
    NOT  shift, and go to state 51

    $default  reduce using rule 17 (Expression)

    BinOp    go to state 69
    OP       go to state 70
    LOGICOP  go to state 71


State 56

   20 Expression: IDENT LBRAC RightValue . RBRAC ASSIGN RightValue

    RBRAC  shift, and go to state 72


State 57

   41 LOGICOP: EQ .

    $default  reduce using rule 41 (LOGICOP)


State 58

   42 LOGICOP: NEQ .

    $default  reduce using rule 42 (LOGICOP)


State 59

   37 LOGICOP: LE .

    $default  reduce using rule 37 (LOGICOP)


State 60

   38 LOGICOP: LEQ .

    $default  reduce using rule 38 (LOGICOP)


State 61

   39 LOGICOP: GE .

    $default  reduce using rule 39 (LOGICOP)


State 62

   40 LOGICOP: GEQ .

    $default  reduce using rule 40 (LOGICOP)


State 63

   22 Expression: IF RightValue LOGICOP . RightValue GOTO LABEL

    NUM    shift, and go to state 34
    IDENT  shift, and go to state 35

    RightValue  go to state 73


State 64

   12 FunctionEnd: END FUNC .

    $default  reduce using rule 12 (FunctionEnd)


State 65

    9 Initialization: IDENT LBRAC NUM RBRAC ASSIGN . NUM

    NUM  shift, and go to state 74


State 66

   21 Expression: IDENT ASSIGN IDENT LBRAC . RightValue RBRAC

    NUM    shift, and go to state 34
    IDENT  shift, and go to state 35

    RightValue  go to state 75


State 67

   29 Expression: IDENT ASSIGN CALL FUNC .

    $default  reduce using rule 29 (Expression)


State 68

   18 Expression: IDENT ASSIGN OP RightValue .

    $default  reduce using rule 18 (Expression)


State 69

   19 Expression: IDENT ASSIGN RightValue BinOp . RightValue

    NUM    shift, and go to state 34
    IDENT  shift, and go to state 35

    RightValue  go to state 76


State 70

   30 BinOp: OP .

    $default  reduce using rule 30 (BinOp)


State 71

   31 BinOp: LOGICOP .

    $default  reduce using rule 31 (BinOp)


State 72

   20 Expression: IDENT LBRAC RightValue RBRAC . ASSIGN RightValue

    ASSIGN  shift, and go to state 77


State 73

   22 Expression: IF RightValue LOGICOP RightValue . GOTO LABEL

    GOTO  shift, and go to state 78


State 74

    9 Initialization: IDENT LBRAC NUM RBRAC ASSIGN NUM .

    $default  reduce using rule 9 (Initialization)


State 75

   21 Expression: IDENT ASSIGN IDENT LBRAC RightValue . RBRAC

    RBRAC  shift, and go to state 79


State 76

   19 Expression: IDENT ASSIGN RightValue BinOp RightValue .

    $default  reduce using rule 19 (Expression)


State 77

   20 Expression: IDENT LBRAC RightValue RBRAC ASSIGN . RightValue

    NUM    shift, and go to state 34
    IDENT  shift, and go to state 35

    RightValue  go to state 80


State 78

   22 Expression: IF RightValue LOGICOP RightValue GOTO . LABEL

    LABEL  shift, and go to state 81


State 79

   21 Expression: IDENT ASSIGN IDENT LBRAC RightValue RBRAC .

    $default  reduce using rule 21 (Expression)


State 80

   20 Expression: IDENT LBRAC RightValue RBRAC ASSIGN RightValue .

    $default  reduce using rule 20 (Expression)


State 81

   22 Expression: IF RightValue LOGICOP RightValue GOTO LABEL .

    $default  reduce using rule 22 (Expression)
