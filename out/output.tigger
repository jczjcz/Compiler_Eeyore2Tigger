f_climbStairs [1] [30]
	store a0 0
	load 0 s1
	s2 = 4
	if s1 >= s2 goto l0
	load 0 s1
	a0 = s1
	return
	l0:
	s1 = 0
	s2 = 0
	loadaddr 2 s0
	s0 = s0 + s1
	s0[0] = s2
	s1 = 4
	s2 = 1
	loadaddr 2 s0
	s0 = s0 + s1
	s0[0] = s2
	s1 = 8
	s2 = 2
	loadaddr 2 s0
	s0 = s0 + s1
	s0[0] = s2
	s1 = 3
	store s1 12
	l1:
	load 0 s1
	s2 = 1
	s0 = s1 + s2
	store s0 14
	load 12 s1
	load 14 s2
	if s1 >= s2 goto l2
	load 12 s1
	s2 = 1
	s0 = s1 - s2
	store s0 18
	s1 = 4
	load 18 s2
	s0 = s1 * s2
	store s0 17
	loadaddr 2 s1
	load 17 s2
	s0 = s1 + s2
	store s0 19
	s1 = 0
	load 19 s2
	s2 = s2 + s1
	s0 = s2[0]
	store s0 16
	load 12 s1
	s2 = 2
	s0 = s1 - s2
	store s0 22
	s1 = 4
	load 22 s2
	s0 = s1 * s2
	store s0 21
	loadaddr 2 s1
	load 21 s2
	s0 = s1 + s2
	store s0 23
	s1 = 0
	load 23 s2
	s2 = s2 + s1
	s0 = s2[0]
	store s0 20
	load 16 s1
	load 20 s2
	s0 = s1 + s2
	store s0 15
	s1 = 4
	load 12 s2
	s0 = s1 * s2
	store s0 24
	loadaddr 2 s1
	load 24 s2
	s0 = s1 + s2
	store s0 25
	s1 = 0
	load 15 s2
	load 25 s0
	s0 = s0 + s1
	s0[0] = s2
	load 12 s1
	s2 = 1
	s0 = s1 + s2
	store s0 12
	goto l1
	l2:
	s1 = 4
	load 0 s2
	s0 = s1 * s2
	store s0 28
	loadaddr 2 s1
	load 28 s2
	s0 = s1 + s2
	store s0 29
	s1 = 0
	load 29 s2
	s2 = s2 + s1
	s0 = s2[0]
	store s0 27
	load 27 s1
	a0 = s1
	return
	s1 = 0
	a0 = s1
	return
end f_climbStairs
f_main [0] [3]
	s1 = 5
	store s1 1
	load 1 s1
	a0 = s1
	call f_climbStairs
	store a0 0
	load 0 s1
	a0 = s1
	return
	s1 = 0
	a0 = s1
	return
end f_main
